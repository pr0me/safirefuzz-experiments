diff --git a/hal_fuzz/hal_fuzz/harness.py b/hal_fuzz/hal_fuzz/harness.py
index d10f881a..35457b63 100755
--- a/hal_fuzz/hal_fuzz/harness.py
+++ b/hal_fuzz/hal_fuzz/harness.py
@@ -1,3 +1,4 @@
+#!/usr/bin/env python3
 import argparse
 import os
 import signal
diff --git a/hal_fuzz/hal_fuzz/native.py b/hal_fuzz/hal_fuzz/native.py
index 67ae547f..e2d79451 100644
--- a/hal_fuzz/hal_fuzz/native.py
+++ b/hal_fuzz/hal_fuzz/native.py
@@ -215,10 +215,10 @@ def add_timer(reload_val, callback=None, isr_num=IRQ_NOT_USED):
     global timer_cb_user_data
     global native_lib
     
-    #assert (timer_cb_wrapper is not None and timer_cb_user_data is not None)
-    if timer_cb_wrapper is not None or timer_cb_user_data is not None:
-        print("WARNING: You just tried to use a timer, and timers are not enabled! Try adding `use_timers: True` and `use_nvic: True` to your firmware's YAML file.")
-        sys.exit(1)
+    assert (timer_cb_wrapper is not None and timer_cb_user_data is not None)
+    #if timer_cb_wrapper is not None or timer_cb_user_data is not None:
+    #    print("WARNING: You just tried to use a timer, and timers are not enabled! Try adding `use_timers: True` and `use_nvic: True` to your firmware's YAML file.")
+    #    sys.exit(1)
     # While technically allowed in the C code, invoking a callback and pending an interrupt at the same time is nothing we would like to support
     assert (not (callback is not None and isr_num != IRQ_NOT_USED))
 
diff --git a/tests/wycinwyc/inputs/input1 b/tests/wycinwyc/inputs/input1
index 684e2846..0ffacc1c 100644
--- a/tests/wycinwyc/inputs/input1
+++ b/tests/wycinwyc/inputs/input1
@@ -1 +1,28 @@
-<a b="c">d</a>
+<?xml version="1.0"?>
+<tests>
+    <item id="0">
+        <name>dummy</name>
+        <description>A dummy for testing the XML parser</description>
+        <trigger>none</trigger>
+    </item>
+    <item id="1">
+        <name>dummy</name>
+        <description>A dummy for testing the XML parser</description>
+        <trigger>mouseclick</trigger>
+    </item>
+    <item id="2">
+        <name>stuff</name>
+        <description>some valid XML</description>
+    </item>
+    <item id="3">
+        <name>nice_item</name>
+        <description>This is an exceptionally well crafted item, the best our store has to offer.</description>
+        <price>$13.37</price>
+    </item>
+    <item id="4">
+        <name>more stuff</name>
+        <description>some valid XML</description>
+    </item>
+</tests>
+    
+

\ No newline at end of file
diff --git a/test_atmel_6lowpan_udp_tx.sh b/test_atmel_6lowpan_udp_tx.sh
index 5c882aeb..8ba39c13 100755
--- a/test_atmel_6lowpan_udp_tx.sh
+++ b/test_atmel_6lowpan_udp_tx.sh
@@ -4,5 +4,5 @@ BINARY=./tests/atmel_6lowpan_udp_tx/atmel_6lowpan_udp_tx.yml
 INPUTS=./tests/atmel_6lowpan_udp_tx/inputs
 OUTPUTS=./tests/atmel_6lowpan_udp_tx/output/
 HARNESS="python3 -m hal_fuzz.harness -c $BINARY"
-#./afl-fuzz -t 10000 -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
-$HARNESS $INPUTS/*
+./afl-fuzz -t 10000 -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
+#$HARNESS $INPUTS/*
diff --git a/test_nxp_lwip_http.sh b/test_nxp_lwip_http.sh
index 8bfd1e7b..5eaa20be 100755
--- a/test_nxp_lwip_http.sh
+++ b/test_nxp_lwip_http.sh
@@ -5,5 +5,5 @@ BINARY=./tests/nxp_lwip_http/nxp_lwip_http.yml
 INPUTS=./tests/nxp_lwip_http/inputs
 OUTPUTS=./tests/nxp_lwip_http/output/
 HARNESS="python3 -m hal_fuzz.harness -t -c $BINARY"
-#./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
-$HARNESS $INPUTS/input1
+./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
+#$HARNESS $INPUTS/input1
diff --git a/test_nxp_lwip_tcpecho.sh b/test_nxp_lwip_tcpecho.sh
index 08348418..81415aec 100755
--- a/test_nxp_lwip_tcpecho.sh
+++ b/test_nxp_lwip_tcpecho.sh
@@ -5,5 +5,5 @@ BINARY=./tests/nxp_lwip_tcpecho/nxp_lwip_tcpecho.yml
 INPUTS=./tests/nxp_lwip_tcpecho/inputs
 OUTPUTS=./tests/nxp_lwip_tcpecho/output/
 HARNESS="python3 -m hal_fuzz.harness -t -n --native-lib=$DIR/hal_fuzz/native/native_hooks.so -c $BINARY"
-#./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
-$HARNESS $INPUTS/input1
+./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
+#$HARNESS $INPUTS/input1
diff --git a/test_nxp_lwip_udpecho.sh b/test_nxp_lwip_udpecho.sh
index 908dbe88..91e2ab2c 100755
--- a/test_nxp_lwip_udpecho.sh
+++ b/test_nxp_lwip_udpecho.sh
@@ -5,5 +5,5 @@ BINARY=./tests/nxp_lwip_udpecho/nxp_lwip_udpecho.yml
 INPUTS=./tests/nxp_lwip_udpecho/inputs
 OUTPUTS=./tests/nxp_lwip_udpecho/output/
 HARNESS="python3 -m hal_fuzz.harness  -t -n --native-lib=$DIR/hal_fuzz/native/native_hooks.so -c $BINARY"
-#./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
-$HARNESS $INPUTS/input1
+./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
+#$HARNESS $INPUTS/input1
diff --git a/test_p2im_controllino.sh b/test_p2im_controllino.sh
index d6aebce9..4e985369 100755
--- a/test_p2im_controllino.sh
+++ b/test_p2im_controllino.sh
@@ -5,5 +5,5 @@ BINARY=./tests/p2im_controllino_slave/p2im_controllino_slave.yml
 INPUTS=./tests/p2im_controllino_slave/inputs
 OUTPUTS=./tests/p2im_controllino_slave/output/
 HARNESS="python3 -m hal_fuzz.harness -d -t -n --native-lib=$DIR/hal_fuzz/hal_fuzz/native/native_hooks.so -c $BINARY"
-#./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
-$HARNESS $INPUTS/input1
+./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
+#$HARNESS $INPUTS/input1
diff --git a/test_p2im_drone.sh b/test_p2im_drone.sh
index d81e69b3..a49fa824 100755
--- a/test_p2im_drone.sh
+++ b/test_p2im_drone.sh
@@ -1,9 +1,9 @@
-#!/bin/bash
+!/bin/bash
 DIR="$(dirname "$(readlink -f "$0")")"
 
 BINARY=./tests/p2im_drone/p2im_drone.yml
 INPUTS=./tests/p2im_drone/inputs
 OUTPUTS=./tests/p2im_drone/output/
 HARNESS="python3 -m hal_fuzz.harness -t -n --native-lib=$DIR/hal_fuzz/hal_fuzz/native/native_hooks.so -c $BINARY"
-#./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
-$HARNESS $INPUTS/input1
+./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
+#$HARNESS $INPUTS/input1
diff --git a/test_samr21_http_eth.sh b/test_samr21_http_eth.sh
index 4d7a35da..86da46f2 100755
--- a/test_samr21_http_eth.sh
+++ b/test_samr21_http_eth.sh
@@ -4,5 +4,5 @@ BINARY=./tests/samr21_http/samr21_http_eth.yml
 INPUTS=./tests/samr21_http/inputs_eth
 OUTPUTS=./tests/samr21_http/output/
 HARNESS="python -m hal_fuzz.harness -n -c $BINARY"
-#./afl-fuzz -t 10000 -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
-$HARNESS $INPUTS/wget_192.168.0.100.pcapng.input
+./afl-fuzz -t 10000 -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
+#$HARNESS $INPUTS/wget_192.168.0.100.pcapng.input
diff --git a/test_st_plc.sh b/test_st_plc.sh
index a9cd6293..fa03f3d3 100755
--- a/test_st_plc.sh
+++ b/test_st_plc.sh
@@ -5,5 +5,5 @@ BINARY=./tests/st-plc/st-plc.yml
 INPUTS=./tests/st-plc/inputs
 OUTPUTS=./tests/st-plc/output/
 HARNESS="python3 -m hal_fuzz.harness -n --native-lib=$DIR/hal_fuzz/hal_fuzz/native/native_hooks.so -c $BINARY"
-#./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
-$HARNESS $INPUTS/input1
+./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
+#$HARNESS $INPUTS/input1
diff --git a/test_stm32_udp_echo.sh b/test_stm32_udp_echo.sh
index 6089dfa5..f5279aa3 100755
--- a/test_stm32_udp_echo.sh
+++ b/test_stm32_udp_echo.sh
@@ -4,5 +4,5 @@ BINARY=./tests/stm32_udp_echo/stm32_udp_echo_server.yml
 INPUTS=./tests/stm32_udp_echo/inputs
 OUTPUTS=./tests/stm32_udp_echo/output/
 HARNESS="python -m hal_fuzz.harness -c $BINARY"
-#./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
-$HARNESS $INPUTS/UDP_Echo_Server_Client.pcapng.input
+./afl-fuzz -U -m none -i $INPUTS -o $OUTPUTS -- $HARNESS @@
+#$HARNESS $INPUTS/UDP_Echo_Server_Client.pcapng.input
diff --git a/hal_fuzz/hal_fuzz/handlers/generic/__init__.py b/hal_fuzz/hal_fuzz/handlers/generic/__init__.py
index 4b675f9b..9e7d7bb1 100644
--- a/hal_fuzz/hal_fuzz/handlers/generic/__init__.py
+++ b/hal_fuzz/hal_fuzz/handlers/generic/__init__.py
@@ -6,6 +6,9 @@ from ...exit import do_exit
 def return_zero(uc):
     uc.reg_write(UC_ARM_REG_R0, 0)
 
+def print_args(uc):
+    print(hex(uc.reg_read(UC_ARM_REG_R0)))
+
 def crash(uc):
     print("[*] Crashing handler at 0x{:08x} triggered, crashing now".format(uc.reg_read(UC_ARM_REG_PC)))
     os.kill(os.getpid(), signal.SIGSEGV)
diff --git a/hal_fuzz/hal_fuzz/models/ethernet.py b/hal_fuzz/hal_fuzz/models/ethernet.py
index cd69b83d..72c1e173 100644
--- a/hal_fuzz/hal_fuzz/models/ethernet.py
+++ b/hal_fuzz/hal_fuzz/models/ethernet.py
@@ -33,7 +33,7 @@ class EthernetModel:
                     print("ETH OUT: " + repr(e))
                     #import ipdb; ipdb.set_trace()
                 except:
-                    input("Cannot decode ethernet packet...")
+                    print("Cannot decode ethernet packet...")
             pass
 
         @classmethod
@@ -49,7 +49,7 @@ class EthernetModel:
                         e = dpkt.ethernet.Ethernet(frame)
                         print("ETH IN: " + repr(e))
                     except:
-                        input("Cannot decode ethernet packet...")
+                        print("Cannot decode ethernet packet...")
                 # import ipdb;
                 # ipdb.set_trace()
                 return frame
diff --git a/tests/st-plc/st-plc.yml b/tests/st-plc/st-plc.yml
index 7fbc54c7..536e7bf6 100644
--- a/tests/st-plc/st-plc.yml
+++ b/tests/st-plc/st-plc.yml
@@ -26,6 +26,13 @@ handlers:
   HAL_UART_Transmit:
     handler: hal_fuzz.handlers.stm32f4_hal.stm32f4_uart.HAL_UART_Transmit
     do_return: False
+  memset:
+    handler: hal_fuzz.handlers.generic.print_args
+    do_return: False
+    addr: 0x801c5f0
+  HAL_Delay:
+    handler:
+    addr: 0x8001d94
 
 #  WiFi_Decode:
 #    handler: hal_fuzz.handlers.misc.st-plc.WiFi_Decode
diff --git a/setup.sh b/setup.sh
index 98fe0359..ec2cc63b 100755
--- a/setup.sh
+++ b/setup.sh
@@ -1,4 +1,4 @@
-UNICORN_QEMU_FLAGS="--python=/usr/bin/python3" make
+AFL_NO_X86=1 UNICORN_QEMU_FLAGS="--python=/usr/bin/python3" make
 cd ./unicorn_mode
 ./build_unicorn_support.sh
 cd ..
