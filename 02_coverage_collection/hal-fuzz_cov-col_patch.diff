diff --git a/hal_fuzz/hal_fuzz/exit.py b/hal_fuzz/hal_fuzz/exit.py
index c856a8c6..5b38fe93 100644
--- a/hal_fuzz/hal_fuzz/exit.py
+++ b/hal_fuzz/hal_fuzz/exit.py
@@ -3,6 +3,8 @@
 import sys
 import os
 
+UNIQUE_BASIC_BLOCKS = set()
+
 exit_hooks = []
 
 def add_exit_hook(fn):
@@ -16,9 +18,14 @@ def do_exit(status, kill_signal=-1):
     2. In the construction of the C-callable function object
     """
     global exit_hooks
+    global UNIQUE_BASIC_BLOCKS
 
     from .globs import debug_enabled, uc
 
+    print("AYE {}".format(len(UNIQUE_BASIC_BLOCKS)))
+    with open("unique_bbs.out", "w+") as f:
+        f.write(repr(UNIQUE_BASIC_BLOCKS))
+
     for fn in exit_hooks:
         if debug_enabled:
             print("Calling exit hook {}".format(exit_hooks))
diff --git a/hal_fuzz/hal_fuzz/harness.py b/hal_fuzz/hal_fuzz/harness.py
index d10f881a..265d7afe 100755
--- a/hal_fuzz/hal_fuzz/harness.py
+++ b/hal_fuzz/hal_fuzz/harness.py
@@ -11,7 +11,7 @@ from . import globs
 from . import nvic
 from . import interrupt_triggers
 from .tracing import trace_bbs, trace_mem, snapshot, trace_ids
-from .exit import do_exit
+from .exit import do_exit, UNIQUE_BASIC_BLOCKS 
 from . import native
 from . import handlers
 from .sparkle import add_sparkles
@@ -62,6 +62,12 @@ def unicorn_debug_block(uc, address, size, user_data):
         import ipdb; ipdb.set_trace()
     """
 
+def unicorn_trace_unique_bb(uc, address, size, user_data):
+    if address not in UNIQUE_BASIC_BLOCKS:
+        UNIQUE_BASIC_BLOCKS.add(address)
+        with open("unique_bbs.out", "w+") as f:
+            f.write(repr(UNIQUE_BASIC_BLOCKS))
+
 def unicorn_trace_syms(uc, address, size, user_data):
     if address in uc.syms_by_addr:
         print("Calling function: {}".format(uc.syms_by_addr[address]))
@@ -246,6 +252,8 @@ def configure_unicorn(args):
     if args.debug and args.trace_funcs:
         add_block_hook(unicorn_trace_syms)
 
+    add_block_hook(unicorn_trace_unique_bb)
+
     # This is our super nasty crash detector
     uc.hook_add(UC_HOOK_MEM_WRITE_UNMAPPED | UC_HOOK_MEM_READ_INVALID, unicorn_debug_mem_invalid_access)
 
@@ -367,7 +375,7 @@ def main():
         print("Execution failed with error: {}".format(e))
         force_crash(e)
 
-    print("Done.")
+    print("XDone.")
     do_exit(0)
 
 if __name__ == "__main__":
